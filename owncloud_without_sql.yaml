apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: owncloud-persistent-template
message: >-
  An ownCloud service including persistent storage has been created in your
  project.
metadata:
  annotations:
    description: >-
      A deployment for ownCloud with MariaDB and Redis, including persistent
      storage.
    iconClass: icon-php
    openshift.io/display-name: ownCloud (Persistent)
    tags: 'instant-app,php,owncloud,mariadb,redis'
  name: owncloud-persistent
objects:
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: owncloud
  - apiVersion: v1
    kind: Route
    metadata:
      name: owncloud
    spec:
      host: '${OWNCLOUD_PUBLIC_DOMAIN}'
      port:
        targetPort: http
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: owncloud
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: owncloud
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: '${OWNCLOUD_VOLUME_CAPACITY}'
  - apiVersion: v1
    kind: Service
    metadata:
      name: owncloud
    spec:
      ports:
        - name: http
          port: 8080
          protocol: TCP
          targetPort: http
      selector:
        app: owncloud
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: owncloud
      name: owncloud
    spec:
      replicas: 1
      selector:
        app: owncloud
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            app: owncloud
          name: owncloud
        spec:
          containers:
            - env:
                - name: OWNCLOUD_DOMAIN
                  value: '${OWNCLOUD_PUBLIC_DOMAIN}'
                - name: OWNCLOUD_PROTOCOL
                  value: https
                - name: OWNCLOUD_CROND_ENABLED
                  value: 'false'
                - name: OWNCLOUD_BACKGROUND_MODE
                  value: webcron
                - name: OWNCLOUD_DB_TYPE
                  value: mysql
                - name: OWNCLOUD_DB_HOST
                  value: ${OWNCLOUD_DB_HOST}
                - name: OWNCLOUD_DB_NAME
                  value: ${OWNCLOUD_DB_NAME}
                - name: OWNCLOUD_DB_USERNAME
                  value: ${OWNCLOUD_DB_USERNAME}
                - name: OWNCLOUD_DB_PASSWORD
                  value: ${OWNCLOUD_DB_PASSWORD}
                - name: OWNCLOUD_REDIS_ENABLED
                  value: 'true'
                - name: OWNCLOUD_REDIS_HOST
                  value: redis
                - name: OWNCLOUD_REDIS_PORT
                  value: '6379'
                - name: OWNCLOUD_VOLUME_ROOT
                  value: /var/lib/owncloud
                - name: OWNCLOUD_LOG_FILE
                  value: /dev/stdout
                - name: OWNCLOUD_ADMIN_USERNAME
                  value: '${OWNCLOUD_ADMIN_USERNAME}'
                - name: OWNCLOUD_ADMIN_PASSWORD
                  value: '${OWNCLOUD_ADMIN_PASSWORD}'
                - name: OWNCLOUD_SESSION_SAVE_HANDLER
                  value: redis
                - name: OWNCLOUD_SESSION_SAVE_PATH
                  value: 'tcp://redis:6379?database=1'
                - name: OWNCLOUD_SKIP_CHOWN
                  value: 'true'
              image: '${OWNCLOUD_IMAGE_NAME}'
              imagePullPolicy: Always
              livenessProbe:
                exec:
                  command:
                    - /usr/bin/healthcheck
                failureThreshold: 30
                initialDelaySeconds: 60
                timeoutSeconds: 3
              name: owncloud
              ports:
                - containerPort: 8080
                  name: http
                  protocol: TCP
              readinessProbe:
                exec:
                  command:
                    - /usr/bin/healthcheck
                failureThreshold: 60
                initialDelaySeconds: 60
                timeoutSeconds: 3
              securityContext:
                allowPrivilegeEscalation: false
              volumeMounts:
                - mountPath: /var/lib/owncloud
                  name: data
          hostname: owncloud
          serviceAccount: owncloud
          volumes:
            - name: data
              persistentVolumeClaim:
                claimName: owncloud
      triggers:
        - type: ConfigChange
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: redis
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
  - apiVersion: v1
    kind: Service
    metadata:
      name: redis
    spec:
      ports:
        - name: redis
          port: 6379
          protocol: TCP
          targetPort: redis
      selector:
        app: redis
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: redis
      name: redis
    spec:
      replicas: 1
      selector:
        app: redis
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            app: redis
          name: redis
        spec:
          containers:
            - image: 'docker.io/redis:5.0'
              imagePullPolicy: Always
              name: redis
              ports:
                - containerPort: 6379
                  name: redis
                  protocol: TCP
              securityContext:
                allowPrivilegeEscalation: false
              volumeMounts:
                - mountPath: /data
                  name: data
            - args:
                - 'trap : TERM INT; sleep infinity & wait'
              command:
                - /bin/bash
                - '-c'
              image: 'docker.io/healthcheck/redis:latest'
              imagePullPolicy: Always
              livenessProbe:
                exec:
                  command:
                    - /usr/local/bin/docker-healthcheck
                failureThreshold: 30
                initialDelaySeconds: 60
                timeoutSeconds: 3
              name: healthcheck
              readinessProbe:
                exec:
                  command:
                    - /usr/local/bin/docker-healthcheck
                failureThreshold: 30
                initialDelaySeconds: 60
                timeoutSeconds: 3
          hostname: redis
          volumes:
            - name: data
              persistentVolumeClaim:
                claimName: redis
      triggers:
        - type: ConfigChange
  - apiVersion: batch/v1beta1
    kind: CronJob
    metadata:
      name: webcron
    spec:
      failedJobsHistoryLimit: 5
      jobTemplate:
        spec:
          template:
            spec:
              containers:
                - args:
                    - curl
                    - 'http://owncloud:8080/cron.php'
                  image: '${OWNCLOUD_IMAGE_NAME}'
                  name: webcron
              restartPolicy: OnFailure
      schedule: '*/15 * * * *'
      successfulJobsHistoryLimit: 0
parameters:
  - description: The domain where you want to reach ownCloud after the deployment.
    displayName: ownCloud Domain FQDN
    name: OWNCLOUD_PUBLIC_DOMAIN
    required: true
  - description: >-
      The username for the initial admin user, can be changed later within
      ownCloud.
    displayName: ownCloud Admin Username
    name: OWNCLOUD_ADMIN_USERNAME
    value: admin
  - description: >-
      The password for the initial admin user, can be changed later within
      ownCloud.
    displayName: ownCloud Admin Password
    name: OWNCLOUD_ADMIN_PASSWORD
    value: admin
  - displayName: DATABASE HOST  
    name: OWNCLOUD_DB_HOST
    required: true
  - displayName: OWNCLOUD DBNAME
    name: OWNCLOUD_DB_NAME
    required: true
  - displayName: OWNCLOUD DBUSERNAME
    name: OWNCLOUD_DB_USERNAME
    required: true
  - displayName: OWNCLOUD DBPASSWORD
    name: OWNCLOUD_DB_PASSWORD
    required: true
  - description: >-
      The name of the ownCloud Docker image used within the OpenShift
      deployment.
    displayName: ownCloud Docker Image
    name: OWNCLOUD_IMAGE_NAME
    value: 'owncloud/server:10.1.1'
  - description: 'Volume space available for data to store ownCloud assets, e.g. 512Mi, 2Gi.'
    displayName: ownCloud Volume Capacity
    name: OWNCLOUD_VOLUME_CAPACITY
    required: true
    value: 5Gi
